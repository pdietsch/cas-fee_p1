@import "variables";
@import "mixins";

*,
*:after,
*:before {
  margin: 0;
  padding: 0;
  @include border-box;
}

html {
  height: 100%;
}

body {
  font-family: $font-stack;
  font-weight: 300;
  line-height: 1.5rem;
  min-height: 100%;
  display: flex;
  flex-direction: column;
  height: 100vh;
}

p {
  font-size: inherit;
  line-height: 1.6;
  margin-bottom: 1rem;
}

a {
  color: $secondary-color;
  text-decoration: none;
  &.active,
  &:hover{
    color: $primary-color;
  }
}

img {
  width: auto;
  max-width: 100%;
  height: auto !important;
}

/* Layout */

.wrapper {
  margin: 0 auto;
  padding: 0;
  max-width: 1024px;
  width: 90%;
}

.content {
  flex: 1 0 auto;
}

.header {
  position: relative;
  padding: 1rem 0 0 0;
}

.footer {
  @extend .header;
  min-height: 1rem;
}

.main {
  padding: 20px 0;
}

/* Header */

.header {
  background: linear-gradient(to right, $primary-color, $secondary-color);
}

.header a {
  @include button(#fff, $alternate-color, medium);
}

/* Filter */

.filter {
  @extend %clearfix;
  background-color: #e7ecea;
}

.filter {
  & ul {
    display: flex;
    justify-content: center;
  }
  & li {
    list-style-type: none;
    left: -1px;
    display: block;
    text-align: center;
    flex: 2;
    &:last-child {
      flex: 3;
      text-align: right;
    }
  }
  & a {
    position: relative;
    display: block;
    margin: 1rem 0;
    text-decoration: none;
    &.active::after {
      position: absolute;
      top: 100%;
      left: 50%;
      margin-top: 1rem;
      margin-left: -10px;
      width: 0;
      height: 0;
      border: solid transparent;
      border-width: 10px;
      border-top-color: #e7ecea;
      content: '';
      pointer-events: none;
    }
    & .text {
      margin-left: 0.8rem;
    }
    & .icon {
      top: 2px;
      position: relative;
      font-size: 1.2rem;
    }
    &:hover:not(.active) .text {
      text-decoration: underline;
    }
  }
}

.filter li a {
  border-left: 1px solid rgba(0,0,0,0.07);
}

@media #{$breakpoint-small} {
  .filter {
    & li {
      flex: 1;
      &:last-child {
        flex: 1;
        text-align: center;
      }
      &:last-child a {
        border-right: 1px solid rgba(0, 0, 0, 0.07);
      }
    }
    & a {
      margin: 0.6rem 0;
      &.active::after {
        margin-top: 0.6rem;
      }
    }
    & li a .text {
      display: none;
    }
  }
}

/* Todolist */

.todolist .listitem {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  //align-items: center;
  justify-content: center;
  padding: 10px 0;
  border-bottom: 1px solid #ccc;
  & .actions {
    flex: 3;
    order: 2;
    text-align: right;
  }
  & .date {
    order: 1;
    flex: 2;
  }
  & .todo {
    order: 2;
    flex: 5;
  }
}

@media #{$breakpoint-small} {
  .todolist .listitem {
    align-items: center;
    & .actions {
      flex: none;
      width: 50%;
      order: 2;
      text-align: right;
    }
    & .date {
      flex: none;
      width: 50%;
      order: 1;
    }
    & .todo {
      flex: none;
      width: 100%;
      order: 3;
    }
  }
}

.todolist button {
  @include button($secondary-color, $alternate-color, small);
  margin-bottom: 0;
}

.todolist .title {
  font-weight: 600;
}

.todolist .duedate {
  font-size: 0.7rem;
}

.todolist .status {
  float: left;
  cursor: pointer;
  &:hover {
    text-decoration: underline;
    color: $primary-color;
  }
  &.finished {
    color: $primary-color;
  }
  & .status-text {
    margin-left: 4px;
  }
  & .status-icon {
    position: relative;
    top: 1px;
    font-size: 1.1rem;
  }
}


/* Style switcher */

.s-switcher {
  float: right;
  border: 1px solid #fff;
  line-height: 1;
  position: relative;
  z-index: 0;
}

.s-switcher:after {
  content: "\f3d0";
  color: #fff;
  display: inline-block;
  position: absolute;
  top: 11px;
  right: 13px;
  font-family: "Ionicons";
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  z-index: -1;
}

.s-switcher select {
  padding: 0.85em 2.25em 0.85em 1.25em;
  outline: 0;
  background: transparent;
  border-radius: 0;
  border: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  line-height: 1;
  font-size: 0.9rem;
  color: #fff;
  z-index: 999;
}
.s-switcher select::-ms-expand {
  display: none;
}

/* Save, Cancel Footer action*/
.footer-actions {
  float: right;
}

/* Add Content */
.addFormLayout .fieldItem{
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  padding: 15px 0px 0px 0px ;
  & .label {
    order: 1;
    flex: 1;
  }
  & .value {
    order: 2;
    flex: 6;
  }
}

.addFormLayout .titleInput,
.addFormLayout .descInput{
  width: 400px;
}

.addFormLayout .completeTillInput{
  width: 150px;
}

.addFormLayout .descInput{
  height: 150px;
}